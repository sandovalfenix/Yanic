

{% extends 'layout/default_layout.twig' %}
  {% block script %}

    <!--APP-->
    <script>
      firebase.initializeApp({
        apiKey: 'AIzaSyCQmMBRu8LqK9U5fv9jPmLgLruHNm92qpQ',
        authDomain: 'yanic-25102.firebaseapp.com',
        projectId: 'yanic-25102'
      });

      // Initialize Cloud Firestore through Firebase
      var db = firebase.firestore();
      const app = new Vue({
          el: "#app",
          data:{
              Msns: [],
              Msn: [],
          },
          methods: {
              create(){
                  var Msn = Object.assign({},this.Msn);
                  db.collection("Msns").add(Msn)
                  .then(function (docRef) {
                      console.log("Registro a√±adido con ID: ", docRef.id);
                  })
                  .catch(function (error) {
                      console.error("Error al agregar registro: ", error);
                  });                
                  this.Msn = []; 
              },
              home(id){
                  var docRef = db.collection("Msns").doc(id);
                  this.Msn = [];
                  docRef.get().then(function(doc) {
                      if (doc.exists) {
                          console.log("Document data:", doc.data());
                          var data = doc.data();
                          data.id = id;
                          app._data.Msn = data;
                      } else {
                          // doc.data() will be undefined in this case
                          console.log("No such document!");
                      }
                  }).catch(function(error) {
                      console.log("Error getting document:", error);
                  });
              },            
              deleted(id){
                  db.collection("Msns").doc(id).delete().then(function() {
                      console.log("Document successfully deleted!");
                  }).catch(function(error) {
                      console.error("Error removing document: ", error);
                  });
              },
              edit(id){
                  this.home(id);
              },
              update(id){                
                  var docRef = db.collection("Msns").doc(id).update(this.Msn)
                  .then(function() {
                      console.log("Actualizacion Completada");
                      app._data.Msn = [];
                  }).catch(function(error) {
                      console.log("Error al actualizar documento:", error);
                  });
              }
          },
          delimiters: ['([', '])'],
      });

      db.collection("Msns").orderBy('text').onSnapshot(function(querySnapshot) {
          app._data.Msns = [];
          querySnapshot.forEach(function(doc) {
              // doc.data() is never undefined for query doc snapshots
              var data = doc.data();
              data.id = doc.id;
              app._data.Msns.push(data);
          });        
      });

      /*var a = location.pathname.substring(1).split("/");
      console.log(a);*/
    </script>
  {% endblock %}
{% block container %}
    <div id="app" class="container-fluid">
      <!--<form action="" method="post">-->
      <div class="row">
        <div class="input-group mb-3 mt-3 ml-3">
          <div class="text-light ml-3 text-white ts-20">
            <i class="fal fa-play-circle"></i>&nbsp;CHAT</div>
        </div>
      </div>
      <div v-if="Msns.length > 0">
        <div v-for="Msn in Msns" class="row text-light m-0 text-white ts-15 mb-1 mt-1 ml-3">
          <div class="col">
            <button v-if="Msn.id" type="button" class="btn btn-outline-danger"  @click="deleted"><span class="fal fa-trash mr-1" ></span></button>
          </div>
          <div class="col-10">
            ([Msn.text])
          </div>
        </div>
      </div>
      <p v-else="Msns.length === 0" class="text-center text-danger">No hay registros disponibles</p>
      <div class="input-group mb-3" style="position:fixed; bottom:0; width:98%;">
        <div class="input-group-prepend">
          <span class="input-group-text prl"><span class="fal fa-lock-alt pl-1"></span></span>
        </div>
        <input type="text" class="input prn" placeholder="Envia un mensaje..." v-model="Msn.text" required>
        <button v-if="Msn.id" type="button" class="input-group-text prr op-password" @click="Msn = []"><span class="fal fa-close" ></span></button>
        <button v-else="Msn.id" type="button" class="input-group-text prr op-password"  @click="create"><span class="fal fa-play" ></span></button>
      </div>
          <!--</form>-->
    </div>
  {% endblock %}
 